<div class="modal"
     id="exampleModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
	<div class="modal-dialog"
	     role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title"
				    id="exampleModalLabel">Activate question</h5>
				<button type="button"
				        class="close"
				        data-dismiss="modal"
				        aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="form-group row">
					<label for="questionText"
					       class="col-sm-2 col-form-label">Question:
					</label>
					<div class="col-sm-10">
						<input type="text"
						       class="form-control"
						       id="questionText"
						       disabled>
					</div>
				</div>
				<div class="form-group row">
					<label for="question"
					       class="col-sm-2 col-form-label">Time:
					</label>
					<div class="col-sm-10">
						<input id="time"
						       type="number"
						       value="0"
						       min="5"
						       max="150"
						       step="5">
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button"
				        class="btn btn-secondary"
				        data-dismiss="modal">Cancel
				</button>
				<button type="button"
				        class="btn btn-primary"
				        onclick="activateQuestion()">Confirm
				</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.js"></script>
<script type="text/javascript"
        src="/js/bootstrap-input-spinner.js"></script>

<script type="text/javascript">
  function activateQuestion() {
    let time = parseInt($("#time")[0].value);
    console.log("Time is", time);
    axios.post('/api/question/activate/' + questionToActivate.id)
        .then(response => {
          console.log(response);
          $('#activeQuestion' + questionToActivate.index).prop('checked', true);
          $('#exampleModal').modal('hide');
          console.log(`Question is active for ${time} seconds`);
          disableActivation(true);
          startTimer(time);
        })
        .catch(err => {
          console.log(err);
        });
  }

  function disableActivation(disable) {
    $('.modal-btn').each(function () {
      $(this).prop('disabled', disable);
    });
  }

  function deactivateQuestion(id) {
    axios.post('/api/question/deactivate/' + id)
        .then(response => {
          console.log(response);
        })
        .catch(err => {
          console.log(err);
        });
  }

  function startTimer(duration) {
    let timer = duration, minutes, seconds;
    let timerHtml = $("#timeHeader")[0];

    let interval = setInterval(() => {
      minutes = parseInt(timer / 60)
      seconds = parseInt(timer % 60);

      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;
      timerHtml.innerHTML = `
      <div class="alert alert-info" role="alert">
		    Question "${questionToActivate.text}" is active for <strong>${minutes}:${seconds}</strong>
			</div>`;

      if (--timer < 0) {
        clearInterval(interval);
        timerHtml.innerHTML = "";
        disableActivation(false);
        deactivateQuestion(questionToActivate.id);
        $('input:checked').prop("checked", false);
        getChartResults(questionToActivate.options, [2,5,6]);
      }
    }, 1000);
  }

  function load() {
    $("input[type='number']").InputSpinner();
  }

  document.onload = load();
</script>


<script>
  function getChartResults(options, data) {
    let myChart = document.getElementById('chartResults').getContext('2d');

    // Global Options
    Chart.defaults.global.defaultFontFamily = 'Lato';
    Chart.defaults.global.defaultFontSize = 18;
    Chart.defaults.global.defaultFontColor = '#777';

    let massPopChart = new Chart(myChart, {
      type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
      data: {
        labels: options,
        datasets: [{
          label: 'Answers',
          data: data,
          //backgroundColor:'green',
          backgroundColor: [
            'rgba(255, 99, 132, 0.6)',
            'rgba(54, 162, 235, 0.6)',
            'rgba(255, 206, 86, 0.6)',
            'rgba(75, 192, 192, 0.6)',
            'rgba(153, 102, 255, 0.6)',
            'rgba(255, 159, 64, 0.6)',
            'rgba(255, 99, 132, 0.6)'
          ],
          borderWidth: 1,
          borderColor: '#777',
          hoverBorderWidth: 3,
          hoverBorderColor: '#000'
        }]
      },
      options: {
        title: {
          display: true,
          text: 'Answers',
          fontSize: 25
        },
        legend: {
          display: true,
          position: 'right',
          labels: {
            fontColor: '#000'
          }
        },
        layout: {
          padding: {
            left: 50,
            right: 0,
            bottom: 0,
            top: 0
          }
        },
        tooltips: {
          enabled: true
        }
      }
    });
  }
</script>

